{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNz30b6FHQDuAsrx8H7ZDms",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jamesenet/Data-Science-/blob/main/Olympics%20Dataset\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y_1f8UpTHJ7S",
        "outputId": "d60e7ff7-a978-4580-cf47-5fb4219e375f"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = '/content/drive/My Drive/athlete_events.csv'"
      ],
      "metadata": {
        "id": "o5k5DXZ9Lhm6"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv(file_path)\n",
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AVGezGCQLqaT",
        "outputId": "3b8f92e4-8ed1-4111-c095-91585b7d6016"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   ID                      Name Sex   Age  Height  Weight            Team  \\\n",
            "0   1                 A Dijiang   M  24.0   180.0    80.0           China   \n",
            "1   2                  A Lamusi   M  23.0   170.0    60.0           China   \n",
            "2   3       Gunnar Nielsen Aaby   M  24.0     NaN     NaN         Denmark   \n",
            "3   4      Edgar Lindenau Aabye   M  34.0     NaN     NaN  Denmark/Sweden   \n",
            "4   5  Christine Jacoba Aaftink   F  21.0   185.0    82.0     Netherlands   \n",
            "\n",
            "   NOC        Games  Year  Season       City          Sport  \\\n",
            "0  CHN  1992 Summer  1992  Summer  Barcelona     Basketball   \n",
            "1  CHN  2012 Summer  2012  Summer     London           Judo   \n",
            "2  DEN  1920 Summer  1920  Summer  Antwerpen       Football   \n",
            "3  DEN  1900 Summer  1900  Summer      Paris     Tug-Of-War   \n",
            "4  NED  1988 Winter  1988  Winter    Calgary  Speed Skating   \n",
            "\n",
            "                              Event Medal  \n",
            "0       Basketball Men's Basketball   NaN  \n",
            "1      Judo Men's Extra-Lightweight   NaN  \n",
            "2           Football Men's Football   NaN  \n",
            "3       Tug-Of-War Men's Tug-Of-War  Gold  \n",
            "4  Speed Skating Women's 500 metres   NaN  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "most_popular_sport = df['Sport'].value_counts()\n",
        "print(most_popular_sport)"
      ],
      "metadata": {
        "id": "CmHqEAo6qp0-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f050c37-fbe9-4d43-de6a-1a8db9ff6ac6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sport\n",
            "Athletics        38624\n",
            "Gymnastics       26707\n",
            "Swimming         23195\n",
            "Shooting         11448\n",
            "Cycling          10859\n",
            "                 ...  \n",
            "Racquets            12\n",
            "Jeu De Paume        11\n",
            "Roque                4\n",
            "Basque Pelota        2\n",
            "Aeronautics          1\n",
            "Name: count, Length: 66, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "file_path_1 = '/content/drive/My Drive/noc_regions.csv'"
      ],
      "metadata": {
        "id": "TYmqBUhgL0_H"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df1= pd.read_csv(file_path_1)\n",
        "print(df1.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_fgLjkjHMPD7",
        "outputId": "4efb0625-cdcf-4493-cb37-0bf77fa86175"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   NOC       region                 notes\n",
            "0  AFG  Afghanistan                   NaN\n",
            "1  AHO      Curacao  Netherlands Antilles\n",
            "2  ALB      Albania                   NaN\n",
            "3  ALG      Algeria                   NaN\n",
            "4  AND      Andorra                   NaN\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zYYbf7WjN6d9",
        "outputId": "91084909-03d1-4acf-cfc4-e3edb3b1dd3f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(271116, 15)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.shape\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xVxxOEh_N9EY",
        "outputId": "a8dec6f5-05c5-4a03-fb9d-c46a346e508e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(230, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "eVYJXDmQODeV",
        "outputId": "1a698625-c05b-47f7-e562-af688f1738f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID          int64\n",
              "Name       object\n",
              "Sex        object\n",
              "Age       float64\n",
              "Height    float64\n",
              "Weight    float64\n",
              "Team       object\n",
              "NOC        object\n",
              "Games      object\n",
              "Year        int64\n",
              "Season     object\n",
              "City       object\n",
              "Sport      object\n",
              "Event      object\n",
              "Medal      object\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Name</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sex</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Height</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Weight</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Team</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NOC</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Games</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Season</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sport</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Event</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Medal</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "IOdQXj2yO46-",
        "outputId": "d666f9f7-beb2-4586-c2d5-43d0cbf1b8ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NOC       object\n",
              "region    object\n",
              "notes     object\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>NOC</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>notes</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sex_counts = df['Sex'].value_counts()\n",
        "print(sex_counts)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xcr1rCZiRn3t",
        "outputId": "a0835c8a-dddc-4d0a-cb59-e3c847a00c2c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sex\n",
            "M    196594\n",
            "F     74522\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "sex_counts.plot(kind='bar', color=['skyblue', 'salmon'])\n",
        "plt.title('Gender Distribution of Participants')\n",
        "plt.xlabel('Sex')\n",
        "plt.ylabel('Count')\n",
        "plt.xticks(rotation=0)  # Keep x-axis labels horizontal\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "-K-P__vCiZeg",
        "outputId": "30df31de-a4ae-4231-93b2-e16eae36dc88"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Best_teams = df['Team'].value_counts()\n",
        "print(Best_teams)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7OWL4XSnP647",
        "outputId": "061d4e05-b31c-483e-9901-8002adf88e21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Team\n",
            "United States    17847\n",
            "France           11988\n",
            "Great Britain    11404\n",
            "Italy            10260\n",
            "Germany           9326\n",
            "                 ...  \n",
            "Briar                1\n",
            "Hannover             1\n",
            "Nan-2                1\n",
            "Brentina             1\n",
            "Digby                1\n",
            "Name: count, Length: 1184, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "id": "vvqnKfeMWdLf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "outputId": "7678a0db-fe4a-4909-8873-bcf219477656"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID             0\n",
              "Name           0\n",
              "Sex            0\n",
              "Age         9474\n",
              "Height     60171\n",
              "Weight     62875\n",
              "Team           0\n",
              "NOC            0\n",
              "Games          0\n",
              "Year           0\n",
              "Season         0\n",
              "City           0\n",
              "Sport          0\n",
              "Event          0\n",
              "Medal     231333\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Name</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sex</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age</th>\n",
              "      <td>9474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Height</th>\n",
              "      <td>60171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Weight</th>\n",
              "      <td>62875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Team</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NOC</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Games</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Season</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sport</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Event</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Medal</th>\n",
              "      <td>231333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "aTlrZaYJY1Ig",
        "outputId": "239755ba-dd6b-4dfb-e6b3-b9e225af9758"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NOC         0\n",
              "region      3\n",
              "notes     209\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>NOC</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>notes</th>\n",
              "      <td>209</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "id": "xVeFWumCZ06G",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "7b8e7179-ec0e-46e0-da41-15ffea139aa3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  ID            Age         Height         Weight  \\\n",
              "count  271116.000000  261642.000000  210945.000000  208241.000000   \n",
              "mean    68248.954396      25.556898     175.338970      70.702393   \n",
              "std     39022.286345       6.393561      10.518462      14.348020   \n",
              "min         1.000000      10.000000     127.000000      25.000000   \n",
              "25%     34643.000000      21.000000     168.000000      60.000000   \n",
              "50%     68205.000000      24.000000     175.000000      70.000000   \n",
              "75%    102097.250000      28.000000     183.000000      79.000000   \n",
              "max    135571.000000      97.000000     226.000000     214.000000   \n",
              "\n",
              "                Year  \n",
              "count  271116.000000  \n",
              "mean     1978.378480  \n",
              "std        29.877632  \n",
              "min      1896.000000  \n",
              "25%      1960.000000  \n",
              "50%      1988.000000  \n",
              "75%      2002.000000  \n",
              "max      2016.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f9a13b7-2368-4fb2-a0c9-56fe6c82f836\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>271116.000000</td>\n",
              "      <td>261642.000000</td>\n",
              "      <td>210945.000000</td>\n",
              "      <td>208241.000000</td>\n",
              "      <td>271116.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>68248.954396</td>\n",
              "      <td>25.556898</td>\n",
              "      <td>175.338970</td>\n",
              "      <td>70.702393</td>\n",
              "      <td>1978.378480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>39022.286345</td>\n",
              "      <td>6.393561</td>\n",
              "      <td>10.518462</td>\n",
              "      <td>14.348020</td>\n",
              "      <td>29.877632</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>127.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>1896.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>34643.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>168.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>1960.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>68205.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>175.000000</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>1988.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>102097.250000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>183.000000</td>\n",
              "      <td>79.000000</td>\n",
              "      <td>2002.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>135571.000000</td>\n",
              "      <td>97.000000</td>\n",
              "      <td>226.000000</td>\n",
              "      <td>214.000000</td>\n",
              "      <td>2016.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f9a13b7-2368-4fb2-a0c9-56fe6c82f836')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1f9a13b7-2368-4fb2-a0c9-56fe6c82f836 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1f9a13b7-2368-4fb2-a0c9-56fe6c82f836');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cd72f7dd-fe0e-47a9-b1f6-3658ff418ce1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd72f7dd-fe0e-47a9-b1f6-3658ff418ce1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cd72f7dd-fe0e-47a9-b1f6-3658ff418ce1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 84292.84810060589,\n        \"min\": 1.0,\n        \"max\": 271116.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          68248.95439590434,\n          68205.0,\n          271116.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92493.71542098433,\n        \"min\": 6.393560847032701,\n        \"max\": 261642.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25.556898357297374,\n          24.0,\n          261642.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 74526.5637841829,\n        \"min\": 10.518462222678274,\n        \"max\": 210945.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          175.33896987366376,\n          175.0,\n          210945.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 73597.41351430386,\n        \"min\": 14.348019999019838,\n        \"max\": 208241.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          70.70239290053351,\n          70.0,\n          208241.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 95256.87714696524,\n        \"min\": 29.877631985612652,\n        \"max\": 271116.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1978.3784800601957,\n          1988.0,\n          271116.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "zuK6uHN-KYfa",
        "outputId": "c5c78fc4-4ab6-4c6a-8205-b914b0588c25"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NOC   region                 notes\n",
              "count   230      227                    21\n",
              "unique  230      206                    21\n",
              "top     AFG  Germany  Netherlands Antilles\n",
              "freq      1        4                     1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79b64dba-d667-4fcf-bd8f-386cc83f7eb2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NOC</th>\n",
              "      <th>region</th>\n",
              "      <th>notes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>230</td>\n",
              "      <td>227</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>230</td>\n",
              "      <td>206</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>AFG</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Netherlands Antilles</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79b64dba-d667-4fcf-bd8f-386cc83f7eb2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79b64dba-d667-4fcf-bd8f-386cc83f7eb2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79b64dba-d667-4fcf-bd8f-386cc83f7eb2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4571f9fe-93e5-47f0-bba1-22acc5fe185c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4571f9fe-93e5-47f0-bba1-22acc5fe185c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4571f9fe-93e5-47f0-bba1-22acc5fe185c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"NOC\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"230\",\n          \"AFG\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          206,\n          \"4\",\n          \"227\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"notes\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"21\",\n          \"Netherlands Antilles\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df = pd.merge(df, df1, on='NOC', how='left')"
      ],
      "metadata": {
        "id": "5qZhs8XDKbRN"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 929
        },
        "id": "rWfI2_YxUyMW",
        "outputId": "5e0cba33-bd6e-4b32-de3d-d6d2abdfd7fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            ID                      Name Sex   Age  Height  Weight  \\\n",
              "0            1                 A Dijiang   M  24.0   180.0    80.0   \n",
              "1            2                  A Lamusi   M  23.0   170.0    60.0   \n",
              "2            3       Gunnar Nielsen Aaby   M  24.0     NaN     NaN   \n",
              "3            4      Edgar Lindenau Aabye   M  34.0     NaN     NaN   \n",
              "4            5  Christine Jacoba Aaftink   F  21.0   185.0    82.0   \n",
              "...        ...                       ...  ..   ...     ...     ...   \n",
              "271111  135569                Andrzej ya   M  29.0   179.0    89.0   \n",
              "271112  135570                  Piotr ya   M  27.0   176.0    59.0   \n",
              "271113  135570                  Piotr ya   M  27.0   176.0    59.0   \n",
              "271114  135571        Tomasz Ireneusz ya   M  30.0   185.0    96.0   \n",
              "271115  135571        Tomasz Ireneusz ya   M  34.0   185.0    96.0   \n",
              "\n",
              "                  Team  NOC        Games  Year  Season            City  \\\n",
              "0                China  CHN  1992 Summer  1992  Summer       Barcelona   \n",
              "1                China  CHN  2012 Summer  2012  Summer          London   \n",
              "2              Denmark  DEN  1920 Summer  1920  Summer       Antwerpen   \n",
              "3       Denmark/Sweden  DEN  1900 Summer  1900  Summer           Paris   \n",
              "4          Netherlands  NED  1988 Winter  1988  Winter         Calgary   \n",
              "...                ...  ...          ...   ...     ...             ...   \n",
              "271111        Poland-1  POL  1976 Winter  1976  Winter       Innsbruck   \n",
              "271112          Poland  POL  2014 Winter  2014  Winter           Sochi   \n",
              "271113          Poland  POL  2014 Winter  2014  Winter           Sochi   \n",
              "271114          Poland  POL  1998 Winter  1998  Winter          Nagano   \n",
              "271115          Poland  POL  2002 Winter  2002  Winter  Salt Lake City   \n",
              "\n",
              "                Sport                                     Event Medal  \\\n",
              "0          Basketball               Basketball Men's Basketball   NaN   \n",
              "1                Judo              Judo Men's Extra-Lightweight   NaN   \n",
              "2            Football                   Football Men's Football   NaN   \n",
              "3          Tug-Of-War               Tug-Of-War Men's Tug-Of-War  Gold   \n",
              "4       Speed Skating          Speed Skating Women's 500 metres   NaN   \n",
              "...               ...                                       ...   ...   \n",
              "271111           Luge                Luge Mixed (Men)'s Doubles   NaN   \n",
              "271112    Ski Jumping  Ski Jumping Men's Large Hill, Individual   NaN   \n",
              "271113    Ski Jumping        Ski Jumping Men's Large Hill, Team   NaN   \n",
              "271114      Bobsleigh                      Bobsleigh Men's Four   NaN   \n",
              "271115      Bobsleigh                      Bobsleigh Men's Four   NaN   \n",
              "\n",
              "             region notes  \n",
              "0             China   NaN  \n",
              "1             China   NaN  \n",
              "2           Denmark   NaN  \n",
              "3           Denmark   NaN  \n",
              "4       Netherlands   NaN  \n",
              "...             ...   ...  \n",
              "271111       Poland   NaN  \n",
              "271112       Poland   NaN  \n",
              "271113       Poland   NaN  \n",
              "271114       Poland   NaN  \n",
              "271115       Poland   NaN  \n",
              "\n",
              "[271116 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c2237f4-e9cd-404f-ab01-d3b3ea5c5f7f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>Height</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Team</th>\n",
              "      <th>NOC</th>\n",
              "      <th>Games</th>\n",
              "      <th>Year</th>\n",
              "      <th>Season</th>\n",
              "      <th>City</th>\n",
              "      <th>Sport</th>\n",
              "      <th>Event</th>\n",
              "      <th>Medal</th>\n",
              "      <th>region</th>\n",
              "      <th>notes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>A Dijiang</td>\n",
              "      <td>M</td>\n",
              "      <td>24.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>China</td>\n",
              "      <td>CHN</td>\n",
              "      <td>1992 Summer</td>\n",
              "      <td>1992</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Barcelona</td>\n",
              "      <td>Basketball</td>\n",
              "      <td>Basketball Men's Basketball</td>\n",
              "      <td>NaN</td>\n",
              "      <td>China</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>A Lamusi</td>\n",
              "      <td>M</td>\n",
              "      <td>23.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>China</td>\n",
              "      <td>CHN</td>\n",
              "      <td>2012 Summer</td>\n",
              "      <td>2012</td>\n",
              "      <td>Summer</td>\n",
              "      <td>London</td>\n",
              "      <td>Judo</td>\n",
              "      <td>Judo Men's Extra-Lightweight</td>\n",
              "      <td>NaN</td>\n",
              "      <td>China</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Gunnar Nielsen Aaby</td>\n",
              "      <td>M</td>\n",
              "      <td>24.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Denmark</td>\n",
              "      <td>DEN</td>\n",
              "      <td>1920 Summer</td>\n",
              "      <td>1920</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Antwerpen</td>\n",
              "      <td>Football</td>\n",
              "      <td>Football Men's Football</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Denmark</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Edgar Lindenau Aabye</td>\n",
              "      <td>M</td>\n",
              "      <td>34.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Denmark/Sweden</td>\n",
              "      <td>DEN</td>\n",
              "      <td>1900 Summer</td>\n",
              "      <td>1900</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Paris</td>\n",
              "      <td>Tug-Of-War</td>\n",
              "      <td>Tug-Of-War Men's Tug-Of-War</td>\n",
              "      <td>Gold</td>\n",
              "      <td>Denmark</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Christine Jacoba Aaftink</td>\n",
              "      <td>F</td>\n",
              "      <td>21.0</td>\n",
              "      <td>185.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>NED</td>\n",
              "      <td>1988 Winter</td>\n",
              "      <td>1988</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Calgary</td>\n",
              "      <td>Speed Skating</td>\n",
              "      <td>Speed Skating Women's 500 metres</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271111</th>\n",
              "      <td>135569</td>\n",
              "      <td>Andrzej ya</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>179.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>Poland-1</td>\n",
              "      <td>POL</td>\n",
              "      <td>1976 Winter</td>\n",
              "      <td>1976</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Innsbruck</td>\n",
              "      <td>Luge</td>\n",
              "      <td>Luge Mixed (Men)'s Doubles</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Poland</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271112</th>\n",
              "      <td>135570</td>\n",
              "      <td>Piotr ya</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>176.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>Poland</td>\n",
              "      <td>POL</td>\n",
              "      <td>2014 Winter</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Sochi</td>\n",
              "      <td>Ski Jumping</td>\n",
              "      <td>Ski Jumping Men's Large Hill, Individual</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Poland</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271113</th>\n",
              "      <td>135570</td>\n",
              "      <td>Piotr ya</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>176.0</td>\n",
              "      <td>59.0</td>\n",
              "      <td>Poland</td>\n",
              "      <td>POL</td>\n",
              "      <td>2014 Winter</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Sochi</td>\n",
              "      <td>Ski Jumping</td>\n",
              "      <td>Ski Jumping Men's Large Hill, Team</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Poland</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271114</th>\n",
              "      <td>135571</td>\n",
              "      <td>Tomasz Ireneusz ya</td>\n",
              "      <td>M</td>\n",
              "      <td>30.0</td>\n",
              "      <td>185.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>Poland</td>\n",
              "      <td>POL</td>\n",
              "      <td>1998 Winter</td>\n",
              "      <td>1998</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Nagano</td>\n",
              "      <td>Bobsleigh</td>\n",
              "      <td>Bobsleigh Men's Four</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Poland</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271115</th>\n",
              "      <td>135571</td>\n",
              "      <td>Tomasz Ireneusz ya</td>\n",
              "      <td>M</td>\n",
              "      <td>34.0</td>\n",
              "      <td>185.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>Poland</td>\n",
              "      <td>POL</td>\n",
              "      <td>2002 Winter</td>\n",
              "      <td>2002</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Salt Lake City</td>\n",
              "      <td>Bobsleigh</td>\n",
              "      <td>Bobsleigh Men's Four</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Poland</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>271116 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c2237f4-e9cd-404f-ab01-d3b3ea5c5f7f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3c2237f4-e9cd-404f-ab01-d3b3ea5c5f7f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3c2237f4-e9cd-404f-ab01-d3b3ea5c5f7f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b8732975-ad8e-47d7-ad77-4d84c1ed50a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8732975-ad8e-47d7-ad77-4d84c1ed50a0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b8732975-ad8e-47d7-ad77-4d84c1ed50a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_2f3a8158-eb44-412d-a7fc-674395206771\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('merged_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2f3a8158-eb44-412d-a7fc-674395206771 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('merged_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "merged_df"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zs2J_9a9U0g9",
        "outputId": "a7727879-76f4-4979-f0a3-0e61cc9de174"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(271116, 17)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for column in ['Age', 'Height', 'Weight']:\n",
        "    median_value = merged_df[column].median()\n",
        "    merged_df[column].fillna(median_value, inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FdqGU9mfVRRR",
        "outputId": "2126caa1-870a-4982-a2ad-0b6e1ce96a0b"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-cd5bfe64173f>:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  merged_df[column].fillna(median_value, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_df.isnull().sum()"
      ],
      "metadata": {
        "id": "nYwHDlvkWQgM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "outputId": "e572f971-7b18-4f1c-ddcc-b33e2e2c65b0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID             0\n",
              "Name           0\n",
              "Sex            0\n",
              "Age            0\n",
              "Height         0\n",
              "Weight         0\n",
              "Team           0\n",
              "NOC            0\n",
              "Games          0\n",
              "Year           0\n",
              "Season         0\n",
              "City           0\n",
              "Sport          0\n",
              "Event          0\n",
              "Medal     231333\n",
              "region       370\n",
              "notes     266077\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Name</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sex</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Height</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Weight</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Team</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NOC</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Games</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Season</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sport</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Event</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Medal</th>\n",
              "      <td>231333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region</th>\n",
              "      <td>370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>notes</th>\n",
              "      <td>266077</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.hist(merged_df['Age'], bins=range(0, 81, 5), color='skyblue', edgecolor='black')\n",
        "plt.xlabel('Age')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Distribution of Age')\n",
        "plt.xlim(0, 80)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "aOAvmLO00Bvf",
        "outputId": "b48c4d00-c3b1-449d-e633-c7f1d7f2fc06"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.hist(merged_df['Weight'], bins=range(0, 160, 5), color='lightgreen', edgecolor='black')\n",
        "plt.xlabel('Weight (kg)')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Distribution of Weight')\n",
        "plt.xlim(0,160)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "aAlCmBRf04zi",
        "outputId": "6307b315-1a30-4ea2-c847-19816ed32de5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.hist(merged_df['Height'], bins=range(0, 200, 5), color='salmon', edgecolor='black')\n",
        "plt.xlabel('Height (cm)')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Distribution of Height')\n",
        "plt.xlim(0,200)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "GPlswHrT06mE",
        "outputId": "8c8479d3-471a-450b-8f38-06cc758840cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sport_stats = merged_df.groupby('Sport')[['Age', 'Height', 'Weight']].describe()\n",
        "print(sport_stats)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iVAyWzFV1a9f",
        "outputId": "6f21c947-3c41-4d18-86ca-3a2e978ee5e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                     Age                                                      \\\n",
            "                   count       mean        std   min   25%   50%   75%   max   \n",
            "Sport                                                                          \n",
            "Aeronautics          1.0  26.000000        NaN  26.0  26.0  26.0  26.0  26.0   \n",
            "Alpine Skiing     8829.0  23.212482   3.970915  14.0  20.0  23.0  25.0  55.0   \n",
            "Alpinism            25.0  33.480000  10.559830  22.0  24.0  33.0  41.0  57.0   \n",
            "Archery           2334.0  27.800343   8.756529  14.0  22.0  25.0  32.0  71.0   \n",
            "Art Competitions  3578.0  42.797652  14.041230  14.0  31.0  42.0  52.0  97.0   \n",
            "...                  ...        ...        ...   ...   ...   ...   ...   ...   \n",
            "Tug-Of-War         170.0  27.935294   5.773992  17.0  24.0  26.0  32.0  45.0   \n",
            "Volleyball        3404.0  25.180670   4.033575  15.0  22.0  25.0  28.0  41.0   \n",
            "Water Polo        3846.0  25.573323   4.312405  14.0  23.0  25.0  28.0  45.0   \n",
            "Weightlifting     3937.0  25.423419   4.251589  15.0  23.0  25.0  28.0  45.0   \n",
            "Wrestling         7154.0  25.674867   4.013220  15.0  23.0  25.0  28.0  50.0   \n",
            "\n",
            "                  Height              ...                Weight             \\\n",
            "                   count        mean  ...    75%    max   count       mean   \n",
            "Sport                                 ...                                    \n",
            "Aeronautics          1.0  175.000000  ...  175.0  175.0     1.0  70.000000   \n",
            "Alpine Skiing     8829.0  173.905765  ...  177.0  200.0  8829.0  71.487428   \n",
            "Alpinism            25.0  175.000000  ...  175.0  175.0    25.0  70.000000   \n",
            "Archery           2334.0  173.502571  ...  178.0  197.0  2334.0  70.008997   \n",
            "Art Competitions  3578.0  174.994131  ...  175.0  190.0  3578.0  70.081330   \n",
            "...                  ...         ...  ...    ...    ...     ...        ...   \n",
            "Tug-Of-War         170.0  176.100000  ...  175.0  195.0   170.0  77.835294   \n",
            "Volleyball        3404.0  186.568449  ...  195.0  219.0  3404.0  78.568155   \n",
            "Water Polo        3846.0  182.129225  ...  188.0  206.0  3846.0  80.316953   \n",
            "Weightlifting     3937.0  169.517907  ...  175.0  205.0  3937.0  78.429642   \n",
            "Wrestling         7154.0  173.026139  ...  177.0  214.0  7154.0  74.075203   \n",
            "\n",
            "                                                            \n",
            "                        std   min   25%   50%   75%    max  \n",
            "Sport                                                       \n",
            "Aeronautics             NaN  70.0  70.0  70.0  70.0   70.0  \n",
            "Alpine Skiing      9.614332  45.0  66.0  70.0  77.0  107.0  \n",
            "Alpinism           0.000000  70.0  70.0  70.0  70.0   70.0  \n",
            "Archery           11.614648  42.0  62.0  70.0  75.0  130.0  \n",
            "Art Competitions   1.123283  59.0  70.0  70.0  70.0   93.0  \n",
            "...                     ...   ...   ...   ...   ...    ...  \n",
            "Tug-Of-War        13.072712  70.0  70.0  70.0  84.5  118.0  \n",
            "Volleyball        11.606275  30.0  70.0  78.0  87.0  120.0  \n",
            "Water Polo        12.155159  50.0  70.0  78.0  89.0  125.0  \n",
            "Weightlifting     22.270614  47.0  60.0  74.0  90.0  176.5  \n",
            "Wrestling         17.426214  42.0  63.0  70.0  82.0  190.0  \n",
            "\n",
            "[66 rows x 24 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gold_medals_by_country = merged_df[merged_df['Medal'] == 'Gold'].groupby('region')['Medal'].count().sort_values(ascending=False)\n",
        "print(gold_medals_by_country)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OaK-h9ox3vYO",
        "outputId": "59cb9efe-e935-4491-8eee-2daa4ed460c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "region\n",
            "USA                            2638\n",
            "Russia                         1599\n",
            "Germany                        1301\n",
            "UK                              678\n",
            "Italy                           575\n",
            "                               ... \n",
            "Individual Olympic Athletes       1\n",
            "Haiti                             1\n",
            "Puerto Rico                       1\n",
            "Grenada                           1\n",
            "Jordan                            1\n",
            "Name: Medal, Length: 99, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gold_medals_by_country.head(10).plot(kind='bar', color='gold')  # Plot top 10 countries\n",
        "plt.title('Top 10 Countries with the Most Gold Medals')\n",
        "plt.xlabel('Country')\n",
        "plt.ylabel('Number of Gold Medals')\n",
        "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability\n",
        "plt.tight_layout()  # Adjust layout to prevent labels from overlapping\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "R05Yrq5kjqEC",
        "outputId": "7d588eb4-85f4-4b51-e15b-c7253979f399"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Select only the numerical columns for correlation calculation.\n",
        "numerical_df = merged_df.select_dtypes(include=['number'])\n",
        "\n",
        "# Calculate the correlation matrix.\n",
        "correlation_matrix = numerical_df.corr()\n",
        "\n",
        "print(correlation_matrix)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RsZi0umHGfJQ",
        "outputId": "7398bdad-39fb-44fb-aa6d-15afacc0efd4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              ID       Age    Height    Weight      Year\n",
            "ID      1.000000 -0.003302 -0.009631 -0.007677  0.011885\n",
            "Age    -0.003302  1.000000  0.105174  0.158762 -0.094497\n",
            "Height -0.009631  0.105174  1.000000  0.786674  0.039832\n",
            "Weight -0.007677  0.158762  0.786674  1.000000  0.027251\n",
            "Year    0.011885 -0.094497  0.039832  0.027251  1.000000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "dPfgAIJSHuHf",
        "outputId": "6e24cd91-4417-48f1-f291-943b35014f98"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group the data by 'NOC' (National Olympic Committee) and 'Medal', then calculate the counts\n",
        "medal_counts_by_country = merged_df.groupby(['NOC', 'Medal']).size().unstack(fill_value=0)\n",
        "\n",
        "# Find the top ten countries with the most Gold medals\n",
        "top_gold = medal_counts_by_country['Gold'].nlargest(10)\n",
        "\n",
        "# Find the top ten countries with the most Silver medals\n",
        "top_silver = medal_counts_by_country['Silver'].nlargest(10)\n",
        "\n",
        "# Find the top ten countries with the most Bronze medals\n",
        "top_bronze = medal_counts_by_country['Bronze'].nlargest(10)\n",
        "\n",
        "\n",
        "print(\"Top Ten Countries with the Most Gold Medals:\")\n",
        "print(top_gold)\n",
        "print(\"\\nTop Ten Countries with the Most Silver Medals:\")\n",
        "print(top_silver)\n",
        "print(\"\\nTop Ten Countries with the Most Bronze Medals:\")\n",
        "print(top_bronze)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "11V-zL0hL7Nd",
        "outputId": "4e7ab48e-34f9-4af2-b057-31d0a0a110ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top Ten Countries with the Most Gold Medals:\n",
            "NOC\n",
            "USA    2638\n",
            "URS    1082\n",
            "GER     745\n",
            "GBR     678\n",
            "ITA     575\n",
            "FRA     501\n",
            "SWE     479\n",
            "CAN     463\n",
            "HUN     432\n",
            "GDR     397\n",
            "Name: Gold, dtype: int64\n",
            "\n",
            "Top Ten Countries with the Most Silver Medals:\n",
            "NOC\n",
            "USA    1641\n",
            "GBR     739\n",
            "URS     732\n",
            "GER     674\n",
            "FRA     610\n",
            "ITA     531\n",
            "SWE     522\n",
            "AUS     455\n",
            "CAN     438\n",
            "RUS     367\n",
            "Name: Silver, dtype: int64\n",
            "\n",
            "Top Ten Countries with the Most Bronze Medals:\n",
            "NOC\n",
            "USA    1358\n",
            "GER     746\n",
            "URS     689\n",
            "FRA     666\n",
            "GBR     651\n",
            "SWE     535\n",
            "ITA     531\n",
            "AUS     517\n",
            "CAN     451\n",
            "FIN     432\n",
            "Name: Bronze, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already calculated 'gold_medals_by_country' using:\n",
        "Silver_medals_by_country = merged_df[merged_df['Medal'] == 'Silver'].groupby('region')['Medal'].count().sort_values(ascending=False)\n",
        "\n",
        "Silver_medals_by_country.head(10).plot(kind='bar', color='green')  # Plot top 10 countries\n",
        "plt.title('Top 10 Countries with the Most Silver Medals')\n",
        "plt.xlabel('Country')\n",
        "plt.ylabel('Number of silver Medals')\n",
        "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability\n",
        "plt.tight_layout()  # Adjust layout to prevent labels from overlapping\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "elGCX8TLkCbm",
        "outputId": "448cc09a-6189-4259-8e1d-1fea167a76e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already calculated 'gold_medals_by_country' using:\n",
        "Bronze_medals_by_country = merged_df[merged_df['Medal'] == 'Bronze'].groupby('region')['Medal'].count().sort_values(ascending=False)\n",
        "\n",
        "Bronze_medals_by_country.head(10).plot(kind='bar', color='Purple')  # Plot top 10 countries\n",
        "plt.title('Top 10 Countries with the Most Bronze Medals')\n",
        "plt.xlabel('Country')\n",
        "plt.ylabel('Number of Bronze Medals')\n",
        "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability\n",
        "plt.tight_layout()  # Adjust layout to prevent labels from overlapping\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "sQsrGWlbkrNQ",
        "outputId": "c1ee8a26-e87a-44f8-cc37-c5d633945118"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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a4cOHWBtba3cv169eihZsmSKx82RI4fy+9OnT/H8+XN4eXl99D1nY2OD8+fP48qVK2naVso4DHakN27dugVHR8cUQUgzSvbWrVtay1M7kbpo0aJ49eoVHj16lC415ciRI9Xz6DSjCZPvBN9lZWUFIOl8pLS4desWihUrlmL5+7Y/rQoUKJDifKBcuXLh6dOnaX6M/Pnzp2mgxJUrV3D+/HnkzZtX66do0aIAgKioKABA69atUaNGDXTt2hX29vYICAjAP//889F/gNmyZUO1atVw4MABAEnBzsvLC56enkhMTMSRI0dw4cIFREdHf3awc3Z21rqdK1cuANDp75aWx9U8tuZxHz16hGfPnmHBggUp/o6acK35O6ZFYGAgLly4gNOnT2PlypUICAhI9XxPzfvrfe9BTVgBgKlTp+LcuXNwcnJC5cqVMXbs2M8OvACQJ08e+Pj4wMfHB/7+/vjhhx+wcOFCHD58GAsXLtRqa2xsnOJQoq77kI+9FsmFh4ejR48e+O677zBo0CBluSbIdOjQIcXrtXDhQsTFxeH58+dp/hsEBgZi7dq1uHr1Kg4fPozAwMBU22met06dOimeNygoSHmPaLY5tf1laq/1li1bULVqVZiZmcHW1hZ58+bF77///tFtGD9+PJ49e4aiRYuidOnSGDJkCM6cOZPm7ab0w3PsiD4gX758qU6Holnm6Oj43vsWL14cAHD27Fk0bdo03Wp636CP9/VSvu/8PnnnZPIP+VCATU6tVqN06dKYOXNmquudnJyUxwsJCcHevXuxdetW7NixA2vWrEGdOnUQFBT0wXMSPT09MXHiRLx58wYHDhzAyJEjYWNjg1KlSuHAgQPK+X+fG+zS4+/2KY+rCbdt27ZFhw4dUm1bpkyZND9flSpVUKhQIQwYMAA3btx4b1DQRatWreDl5YWNGzciKCgI06ZNw5QpU7Bhwwb4+fl99uMnV7duXQBASEgI+vbtqyw3NTVNce6rrtL6Gj99+hQtWrRA0aJFUwRMzes1bdq0904VpMv8c9999x1GjBiBbt26IXfu3Khfv36q7TTP+/fff6eYzgbAJ42215yn6u3tjd9++w358uVD9uzZsXjx4o/OAODt7Y1r165h8+bNCAoKwsKFC/HLL79g/vz56Nq1q8610KdjsCO94eLigl27duHFixda37gvXryorE8utS7/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uhVGRERERLrRucdOrVYjMTExxfK7d+/C0tIyXYoiIiIiIt3pHOzq16+PWbNmKbdVKhVevnyJMWPGoGHDhulZGxERERHpQOdDsTNmzICvry9KliyJN2/eIDAwEFeuXEGePHmwatWqjKiRiIiIiNJA52BXoEABnD59GqtXr8aZM2fw8uVLdOnSBW3atNEaTEFEREREX5bOwQ4AjI2N0bZt2/SuhYiIiIg+Q5qDXUhISJraeXt7f3IxRERERPTp0hzsatWqpVxlQkRSbaNSqVIdMUtEREREGS/NwS5XrlywtLREx44d0a5dO+TJkycj6yIiIiIiHaV5upMHDx5gypQpCA0NRenSpdGlSxccPnwYVlZWsLa2Vn6IiIiIKHOkOdiZmJigdevW2LlzJy5evIgyZcqgT58+cHJywsiRI/H27duMrJOIiIiIPkLnCYoBwNnZGaNHj8auXbtQtGhRTJ48GTExMeldGxERERHpQOdgFxcXh5UrV8LHxwelSpVCnjx5sHXrVtja2mZEfURERESURmkePHHs2DEsXrwYq1evhqurKzp16oR//vmHgY6IiIhIT6Q52FWtWhXOzs7o168fPDw8AAAHDx5M0a5x48bpVx0RERERpZlOV564ffs2fvrpp/eu5zx2RERERJknzcFOrVZnZB1ERERE9Jk+aVQsEREREekfBjsiIiIiA8FgR0RERGQgGOyIiIiIDASDHREREZGB+KRg9+zZMyxcuBAjRoxAdHQ0AODkyZO4d+9euhZHRERERGmn0zx2AHDmzBn4+PjA2toaN2/eRLdu3WBra4sNGzbg9u3bWLZsWUbUSUREREQfoXOP3aBBg9CxY0dcuXIFZmZmyvKGDRsiJCQkXYsjIiIiorTTOdgdP34c33//fYrl+fPnR2RkZLoURURERES60znYmZqaIiYmJsXyy5cvI2/evOlSFBERERHpTudg17hxY4wfPx4JCQkAkq4Pe/v2bQwbNgwtWrRI9wKJiIiIKG10DnYzZszAy5cvYWdnh9evX6NmzZooXLgwLC0tMXHixIyokYiIiIjSQOdRsdbW1ggODsbBgwdx5swZvHz5EhUqVICPj09G1EdEREREaaRzsLt9+zbs7e3h6ekJT09PZbmI4M6dO3B2dk7XAomIiIgobXQ+FOvq6ooKFSrg2rVrWsujoqLg5uaWboURERERkW4+6coTJUqUQOXKlbF7926t5SKSLkVpJCYmYtSoUXBzc0OOHDlQqFAh/PTTT1rPIyIYPXo08uXLhxw5csDHxwdXrlzRepzo6Gi0adMGVlZWsLGxQZcuXfDy5ct0rZWIiIgos+kc7FQqFX777Tf8+OOP8Pf3x5w5c7TWpacpU6bg999/x6+//oqIiAhMmTIFU6dOxdy5c5U2U6dOxZw5czB//nwcPXoUFhYW8PX1xZs3b5Q2bdq0wfnz5xEcHIwtW7YgJCQE3bt3T9daiYiIiDKbzufYaXrLBg4ciOLFi+O7777D2bNnMXr06HQv7vDhw2jSpAn8/f0BJB0GXrVqFY4dO6bUMmvWLPz4449o0qQJAGDZsmWwt7fHpk2bEBAQgIiICOzYsQPHjx9HxYoVAQBz585Fw4YNMX36dDg6OqZ73URERESZ4ZMOxWr4+fnh8OHD2Lt3Lxo1apReNSmqV6+O3bt34/LlywCA06dP4+DBg/Dz8wMA3LhxA5GRkVojcq2trVGlShWEhoYCAEJDQ2FjY6OEOgDw8fGBkZERjh49murzxsXFISYmRuuHiIiISN/pHOxq1qwJExMT5XbJkiVx5MgR2NjYpPs5dsOHD0dAQACKFy+O7Nmzo3z58hgwYADatGkDAMolzOzt7bXuZ29vr6yLjIyEnZ2d1npjY2PY2tq+9xJokyZNgrW1tfLj5OSUrttFRERElBF0DnZ79+6FjY2N1rI8efJg//79UKvV6VUXAOCff/7BihUrsHLlSpw8eRJLly7F9OnTsXTp0nR9nneNGDECz58/V37u3LmToc9HRERElB50PscOANRqNa5evYqoqCitMKdSqeDl5ZVuxQ0ZMkTptQOA0qVL49atW5g0aRI6dOgABwcHAMDDhw+RL18+5X4PHz5EuXLlAAAODg6IiorSety3b98iOjpauf+7TE1NYWpqmm7bQURERPQl6Bzsjhw5gsDAQNy6dSvFoVeVSoXExMR0K+7Vq1cwMtLuVMyWLZsSJt3c3ODg4IDdu3crQS4mJgZHjx5Fz549AQDVqlXDs2fPEBYWBg8PDwDAnj17oFarUaVKlXSrlYiIiCiz6RzsevTogYoVK2Lr1q3Ily9fuk9xktw333yDiRMnwtnZGe7u7jh16hRmzpyJzp07A0gKkgMGDMCECRNQpEgRuLm5YdSoUXB0dETTpk0BJM2516BBA3Tr1g3z589HQkIC+vTpg4CAAI6IJSIiIoOic7C7cuUK1q1bh8KFC2dEPVrmzp2LUaNGoVevXoiKioKjoyO+//57ralVhg4ditjYWHTv3h3Pnj2Dp6cnduzYATMzM6XNihUr0KdPH9StWxdGRkZo0aKF1vx7RERERIZA52BXpUoVXL169YsEO0tLS8yaNQuzZs16bxuVSoXx48dj/Pjx721ja2uLlStXZkCFRERERPpD52DXt29fDB48GJGRkShdujSyZ8+utb5MmTLpVhwRERERpZ3Owa5FixYAoJznBiT1molIug+eICIiIqK00znY3bhxIyPqICIiIqLPpHOwc3FxyYg6iIiIiOgzfdIExdeuXcOsWbMQEREBIOmyYv3790ehQoXStTgiIiIiSjudLym2c+dOlCxZEseOHUOZMmVQpkwZHD16FO7u7ggODs6IGomIiIgoDXTusRs+fDgGDhyIyZMnp1g+bNgw1KtXL92KIyIiIqK007nHLiIiAl26dEmxvHPnzrhw4UK6FEVEREREutM52OXNmxfh4eEploeHh8POzi49aiIiIiKiT6Dzodhu3bqhe/fuuH79OqpXrw4AOHToEKZMmYJBgwale4FERERElDY6B7tRo0bB0tISM2bMwIgRIwAAjo6OGDt2LPr165fuBRIRERFR2ugU7N6+fYuVK1ciMDAQAwcOxIsXLwAkXdOViIiIiDKXTufYGRsbo0ePHnjz5g2ApEDHUEdERESkH3QePFG5cmWcOnUqI2ohIiIios+g8zl2vXr1wuDBg3H37l14eHjAwsJCa32ZMmXSrTgiIiIiSjudg11AQAAAaA2UUKlUEBGoVCokJiamX3VERERElGY6B7sbN25kRB1ERERE9Jl0DnYuLi4ZUQcRERERfSadg92TJ0+QO3duAMCdO3fw559/4vXr12jcuDG8vLzSvUAiIiIiSps0j4o9e/YsXF1dYWdnh+LFiyM8PByVKlXCL7/8ggULFqB27drYtGlTBpZKRERERB+S5mA3dOhQlC5dGiEhIahVqxYaNWoEf39/PH/+HE+fPsX333+PyZMnZ2StRERERPQBaT4Ue/z4cezZswdlypRB2bJlsWDBAvTq1QtGRknZsG/fvqhatWqGFUpEREREH5bmHrvo6Gg4ODgAAHLmzAkLCwvkypVLWZ8rVy7lEmNERERE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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "medal_games_distribution = merged_df.groupby(['Medal', 'Sex', 'Season'])['ID'].count().unstack(fill_value=0)\n",
        "\n",
        "print(\"Medal Distribution by Gender and Games Participation:\")\n",
        "print(medal_games_distribution)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qkPVNDP5M2Mx",
        "outputId": "9ea4b9b6-1e85-4cad-c7d8-acb454f9d978"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Medal Distribution by Gender and Games Participation:\n",
            "Season      Summer  Winter\n",
            "Medal  Sex                \n",
            "Bronze F      3174     597\n",
            "       M      8235    1289\n",
            "Gold   F      3140     607\n",
            "       M      8319    1306\n",
            "Silver F      3128     607\n",
            "       M      8092    1289\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "participation_by_season = merged_df.groupby('Season')['ID'].nunique()\n",
        "\n",
        "print(\"Total Participation between Winter and Summer Games:\")\n",
        "print(participation_by_season)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WpxKdUfrN-gh",
        "outputId": "b21c8ab3-08dd-4c7e-bdc1-ae4d78997cde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total Participation between Winter and Summer Games:\n",
            "Season\n",
            "Summer    116776\n",
            "Winter     18958\n",
            "Name: ID, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "participation_by_season.plot(kind='bar', color=['skyblue', 'salmon'])\n",
        "plt.title('Total Participation between Winter and Summer Games')\n",
        "plt.xlabel('Season')\n",
        "plt.ylabel('Number of Participants')\n",
        "plt.xticks(rotation=0)  # Keep x-axis labels horizontal\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "nQixcoA9njSe",
        "outputId": "6b4050bd-20c2-4a9e-b761-11ed1670147a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group by country and calculate participation count and total medals\n",
        "country_stats = merged_df.groupby('region').agg(\n",
        "    participation_count=('ID', 'nunique'),\n",
        "    total_medals=('Medal', 'count')\n",
        ")\n",
        "\n",
        "# Remove rows with missing medal counts\n",
        "country_stats = country_stats[country_stats['total_medals'] > 0]\n",
        "\n",
        "# Calculate the correlation\n",
        "correlation = country_stats['participation_count'].corr(country_stats['total_medals'])\n",
        "\n",
        "# Print the correlation\n",
        "print(f\"Correlation between Participation Count and Total Medals Won: {correlation:.2f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yU1bmHd4OIvg",
        "outputId": "5307c49d-a831-49f7-ec08-962d4fc11ade"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Correlation between Participation Count and Total Medals Won: 0.93\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Group by country and calculate participation count and total medals\n",
        "country_stats = merged_df.groupby('region').agg(\n",
        "    participation_count=('ID', 'nunique'),\n",
        "    total_medals=('Medal', 'count')\n",
        ")\n",
        "\n",
        "# Remove rows with missing medal counts\n",
        "country_stats = country_stats[country_stats['total_medals'] > 0]\n",
        "\n",
        "# Calculate the correlation matrix\n",
        "correlation_matrix = country_stats[['participation_count', 'total_medals']].corr()\n",
        "\n",
        "# Create the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=.5)\n",
        "plt.title(\"Correlation between Participation and Medals\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "EsdplUcmQcUe",
        "outputId": "179fca06-0983-46f0-a4f0-5494ca9b5295"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group data by 'NOC' (Country) and count the unique IDs (participants)\n",
        "participation_count = merged_df.groupby('NOC')['ID'].nunique()\n",
        "\n",
        "# Group data by 'NOC' and count the occurrences of each medal type\n",
        "medal_counts = merged_df.groupby(['NOC', 'Medal'])['ID'].count().unstack(fill_value=0)\n",
        "\n",
        "# Calculate total medals won by each country\n",
        "total_medals = medal_counts.sum(axis=1)\n",
        "\n",
        "# Merge participation and total medals data\n",
        "correlation_data = pd.DataFrame({'Participation Count': participation_count, 'Total Medals': total_medals})\n",
        "correlation_data = correlation_data.dropna()\n",
        "\n",
        "# Calculate the correlations\n",
        "correlation_gold = correlation_data['Participation Count'].corr(correlation_data['Total Medals'])\n",
        "correlation_silver = correlation_data['Participation Count'].corr(medal_counts['Silver'])\n",
        "correlation_bronze = correlation_data['Participation Count'].corr(medal_counts['Bronze'])\n",
        "\n",
        "# Create a scatter plot using Seaborn with different markers for each medal type\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(data=correlation_data, x='Participation Count', y='Total Medals', label=f'Gold (Correlation: {correlation_gold:.2f})', marker='o')\n",
        "sns.scatterplot(data=correlation_data, x='Participation Count', y=medal_counts['Silver'], label=f'Silver (Correlation: {correlation_silver:.2f})', marker='s')\n",
        "sns.scatterplot(data=correlation_data, x='Participation Count', y=medal_counts['Bronze'], label=f'Bronze (Correlation: {correlation_bronze:.2f})', marker='*')\n",
        "plt.title('Correlation: Participation Count vs. Medals Count')\n",
        "plt.xlabel('Participation Count')\n",
        "plt.ylabel('Medals Count')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 549
        },
        "id": "bGnkOdP8R2WH",
        "outputId": "6c2dd2cf-57df-41f4-fbad-93dcfd68e495"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Filter for gold medals only\n",
        "gold_medals = merged_df[merged_df['Medal'] == 'Gold']\n",
        "\n",
        "# Group data by 'NOC' (Country) and count the unique IDs (participants)\n",
        "participation_count = merged_df.groupby('NOC')['ID'].nunique()\n",
        "\n",
        "# Group data by 'NOC' and count the occurrences of Gold medals\n",
        "gold_medals_count = gold_medals.groupby('NOC')['ID'].count()\n",
        "\n",
        "# Merge participation and gold medals data\n",
        "correlation_data = pd.DataFrame({'Participation Count': participation_count, 'Gold Medals Count': gold_medals_count})\n",
        "correlation_data = correlation_data.dropna()\n",
        "\n",
        "# Calculate the correlation between participation count and gold medals count\n",
        "correlation = correlation_data['Participation Count'].corr(correlation_data['Gold Medals Count'])\n",
        "\n",
        "# Create a scatter plot using Seaborn\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(data=correlation_data, x='Participation Count', y='Gold Medals Count')\n",
        "plt.title(f'Correlation: Participation Count vs. Gold Medals Count (Correlation: {correlation:.2f})')\n",
        "plt.xlabel('Participation Count')\n",
        "plt.ylabel('Gold Medals Count')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 549
        },
        "id": "GtEs7v1hR2xm",
        "outputId": "8ffcb71a-6414-4ab5-e792-80e08af8d03a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group data by 'NOC' (Country) and count the unique IDs (participants)\n",
        "participation_count = merged_df.groupby('NOC')['ID'].nunique()\n",
        "\n",
        "# Group data by 'NOC' and count the occurrences of each medal type\n",
        "medal_counts = merged_df.groupby(['NOC', 'Medal'])['ID'].count().unstack(fill_value=0)\n",
        "\n",
        "# Calculate total medals won by each country\n",
        "total_medals = medal_counts.sum(axis=1)\n",
        "\n",
        "# Merge participation and total medals data\n",
        "medal_efficiency_data = pd.DataFrame({'Participation Count': participation_count, 'Total Medals': total_medals})\n",
        "\n",
        "# Calculate medal efficiency\n",
        "medal_efficiency_data['Medal Efficiency'] = medal_efficiency_data['Total Medals'] / medal_efficiency_data['Participation Count']\n",
        "\n",
        "# Print the result\n",
        "print(medal_efficiency_data[['Participation Count', 'Total Medals', 'Medal Efficiency']])"
      ],
      "metadata": {
        "id": "4v2-7erDVyRI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "af9b51b8-bb40-4c16-f303-8a6e752a0e24"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Participation Count  Total Medals  Medal Efficiency\n",
            "NOC                                                     \n",
            "AFG                  103           2.0          0.019417\n",
            "AHO                   55           1.0          0.018182\n",
            "ALB                   45           NaN               NaN\n",
            "ALG                  373          17.0          0.045576\n",
            "AND                   61           NaN               NaN\n",
            "..                   ...           ...               ...\n",
            "YEM                   28           NaN               NaN\n",
            "YMD                    5           NaN               NaN\n",
            "YUG                 1270         390.0          0.307087\n",
            "ZAM                  145           2.0          0.013793\n",
            "ZIM                  196          22.0          0.112245\n",
            "\n",
            "[230 rows x 3 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import numpy as np\n",
        "# Group data by 'NOC' (Country) and count the unique IDs (participants)\n",
        "participation_count = merged_df.groupby('NOC')['ID'].nunique()\n",
        "\n",
        "# Group data by 'NOC' and count the occurrences of each medal type\n",
        "medal_counts = merged_df.groupby(['NOC', 'Medal'])['ID'].count().unstack(fill_value=0)\n",
        "\n",
        "# Calculate total medals won by each country\n",
        "total_medals = medal_counts.sum(axis=1)\n",
        "\n",
        "# Merge participation and total medals data\n",
        "medal_efficiency_data = pd.DataFrame({'Participation Count': participation_count, 'Total Medals': total_medals})\n",
        "\n",
        "# Replace potential NaN or inf values in 'Medal Efficiency' with 0\n",
        "medal_efficiency_data['Medal Efficiency'] = (medal_efficiency_data['Total Medals'] / medal_efficiency_data['Participation Count']).fillna(0).replace([np.inf, -np.inf], 0)\n"
      ],
      "metadata": {
        "id": "HA2DTXL0ueKc"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# ... (previous code to calculate medal efficiency) ...\n",
        "\n",
        "# Sort by 'Medal Efficiency' in descending order\n",
        "medal_efficiency_data = medal_efficiency_data.sort_values(by=['Medal Efficiency'], ascending=False)\n",
        "\n",
        "# Print the sorted result\n",
        "print(medal_efficiency_data[['Participation Count', 'Total Medals', 'Medal Efficiency']])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QNH5n9Lsu0Hv",
        "outputId": "e0fea0c9-4677-416d-8eea-7f1fc44c3adf"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Participation Count  Total Medals  Medal Efficiency\n",
            "NOC                                                     \n",
            "URS                 2948        2503.0          0.849050\n",
            "GDR                 1360        1005.0          0.738971\n",
            "USA                 9653        5637.0          0.583964\n",
            "ANZ                   53          29.0          0.547170\n",
            "RUS                 2428        1165.0          0.479819\n",
            "..                   ...           ...               ...\n",
            "RHO                   10           NaN          0.000000\n",
            "GEQ                   26           NaN          0.000000\n",
            "GUI                   60           NaN          0.000000\n",
            "GUM                   66           NaN          0.000000\n",
            "LBA                   68           NaN          0.000000\n",
            "\n",
            "[230 rows x 3 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Select the top 5 countries\n",
        "top_5_countries = medal_efficiency_data.head(5)\n",
        "\n",
        "# Create the bar chart\n",
        "plt.figure(figsize=(10, 6))  # Adjust figure size if needed\n",
        "plt.bar(top_5_countries.index, top_5_countries['Medal Efficiency'], color='skyblue')\n",
        "plt.title('Top 5 Countries by Medal Efficiency')\n",
        "plt.xlabel('Country')\n",
        "plt.ylabel('Medal Efficiency')\n",
        "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability\n",
        "plt.tight_layout()  # Adjust layout to prevent labels from overlapping\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ujOUXa4bwPpY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "outputId": "c59edb68-4cba-4e15-cdd4-bfcf751a0686"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "byQzxvvcxH8X"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}